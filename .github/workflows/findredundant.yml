name: Find Redundant Domains

on: 
  workflow_dispatch:
  schedule:
    - cron: "20 23 * * *"

jobs:
  check-domains:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3  # Ensure the repository is checked out

      - name: Set up environment variables
        run: echo "RELEASE_NAME=$(date +%Y%m%d%H%M)" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y csvkit

      - name: Get Check-Domains script
        run: curl -sSLO https://raw.githubusercontent.com/Chocolate4U/Domain-Health-Checker/main/Check-Domains.ps1

      - name: List files to verify script location
        run: ls -l

      - name: Get domains
        run: |
          curl -sSL https://github.com/bootmortis/iran-hosted-domains/releases/latest/download/domains.txt | grep -Ev ".+\.ir$" | sort -u > domains.txt

  check-cloudflare:
    runs-on: ubuntu-latest
    needs: check-domains
    steps:
      - name: Check Domains with Cloudflare
        shell: pwsh
        run: |
          # Verify if Check-Domains.ps1 exists before running it
          if (Test-Path ".\Check-Domains.ps1") {
              pwsh .\Check-Domains.ps1 -Mode DOH -DOHServer Cloudflare -Http3 -Concurrency 100 -Quiet
          } else {
              Write-Host "Check-Domains.ps1 not found."
              exit 1
          }

          # Verify if Results-DOH.csv was created
          if (Test-Path "./Results-DOH.csv") {
              New-Item -Name "Cloudflare" -ItemType "directory" -Force
              Move-Item -Path "./Results-DOH.csv" -Destination "./Cloudflare" -Force
          } else {
              Write-Host "Results-DOH.csv not found after Cloudflare check."
              exit 1 # Exit with error if the file does not exist
          }

  check-google:
    runs-on: ubuntu-latest
    needs: check-domains
    steps:
      - name: Check Domains with Google
        shell: pwsh
        run: |
          # Verify if Check-Domains.ps1 exists before running it
          if (Test-Path ".\Check-Domains.ps1") {
              pwsh .\Check-Domains.ps1 -Mode DOH -DOHServer Google -Http3 -Concurrency 100 -Quiet
          } else {
              Write-Host "Check-Domains.ps1 not found."
              exit 1
          }

          # Verify if Results-DOH.csv was created
          if (Test-Path "./Results-DOH.csv") {
              New-Item -Name "Google" -ItemType "directory" -Force
              Move-Item -Path "./Results-DOH.csv" -Destination "./Google" -Force
          } else {
              Write-Host "Results-DOH.csv not found after Google check."
              exit 1 # Exit with error if the file does not exist
          }

  generate-results:
    runs-on: ubuntu-latest
    needs: [check-cloudflare, check-google]
    steps:
      - name: Generate final result
        run: |
          csvgrep -c 2 -m "DEAD" ./Cloudflare/Results-DOH.csv | awk -F"," '{print $1}' | sed '1d' | sort -u > redundant-cloudflare.txt
          csvgrep -c 2 -m "DEAD" ./Google/Results-DOH.csv | awk -F"," '{print $1}' | sed '1d' | sort -u > redundant-google.txt
          comm -12 redundant-cloudflare.txt redundant-google.txt > redundant-domains.txt

      - name: Push result to redundant branch
        run: |
          mkdir redundant || exit 0
          cp redundant-domains.txt redundant/
          cd redundant || exit 1
          git init
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git checkout -b redundant || exit 0 # Create branch if it doesn't exist
          git add .
          git commit -m "${{ env.RELEASE_NAME }}" || exit 0 # Avoid failure if there's nothing to commit
          git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git push --force origin redundant || exit 0 # Force push to avoid errors if branch is ahead
